AWSTemplateFormatVersion: '2010-09-09'
Description: VPC with Public Subnets

#**********************************************************************************************************************#
#************************************************ AWS CLOUD FORMATION *************************************************#
#**********************************************************************************************************************#

Resources:

#**********************************************************************************************************************#
#******************************************************** VPC *********************************************************#
#**********************************************************************************************************************#

  # Create the VPC
  MyAppVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "172.31.0.0/16"  # sets Classless Inter-Domain Routing - IP range for VPC
      EnableDnsSupport: true  # enable Domain Name System support
      EnableDnsHostnames: true # public DNS hostname map to that public IP address
      Tags:
        - Key: Name
          Value: MyAppVPC

#**********************************************************************************************************************#
#**************************************************** NETWORK ACL *****************************************************#
#**********************************************************************************************************************#

  # Create the Network ACL
  MyAppNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MyAppVPC
      Tags:
        - Key: Name
          Value: MyAppNACL

#**********************************************************************************************************************#
#******************************************************** DHCP ********************************************************#
#**********************************************************************************************************************#

  # Create a Dynamic Host Configuration Protocol (DHCP) Options Set
  MyAppDHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: "eu-west-2.compute.internal"  # Domain name for instances in the VPC
      DomainNameServers:
        - AmazonProvidedDNS  # Use the Amazon-provided DNS
      Tags:
        - Key: Name
          Value: MyAppDHCPOptions

  # Associate the DHCP Options Set with the VPC
  MyAppVPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref MyAppVPC  # Reference to the VPC ID
      DhcpOptionsId: !Ref MyAppDHCPOptions  # Reference to the DHCP Options Set

#**********************************************************************************************************************#
#************************************************** INTERNET GATEWAY **************************************************#
#**********************************************************************************************************************#

  # Create an Internet Gateway
  MyAppInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyAppInternetGateway

  # Attach the Internet Gateway to the VPC
  MyAppVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyAppVPC
      InternetGatewayId: !Ref MyAppInternetGateway

#**********************************************************************************************************************#
#*************************************************** PUBLIC SUBNETS ***************************************************#
#**********************************************************************************************************************#

  # Create a Public Subnet in eu-west-2a
  MyAppPublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyAppVPC  # Reference to the VPC ID
      CidrBlock: "172.31.16.0/20"  # IP range for the subnet
      MapPublicIpOnLaunch: true  # Automatically assign public IPs
      AvailabilityZone: eu-west-2a  # Specify AZ explicitly
      Tags:
        - Key: Name
          Value: MyAppPublicSubnetA

  # Create a Public Subnet in eu-west-2b
  MyAppPublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyAppVPC  # Reference to the VPC ID
      CidrBlock: "172.31.0.0/20"  # IP range for the subnet
      MapPublicIpOnLaunch: true  # Automatically assign public IPs
      AvailabilityZone: eu-west-2b  # Specify AZ explicitly
      Tags:
        - Key: Name
          Value: MyAppPublicSubnetB

  # Create a Public Subnet in eu-west-2c
  MyAppPublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyAppVPC  # Reference to the VPC ID
      CidrBlock: "172.31.32.0/20"  # IP range for the subnet
      MapPublicIpOnLaunch: true  # Automatically assign public IPs
      AvailabilityZone: eu-west-2c  # Specify AZ explicitly
      Tags:
        - Key: Name
          Value: MyAppPublicSubnetC

#**********************************************************************************************************************#
#***************************************************** ROUTE TABLE ****************************************************#
#**********************************************************************************************************************#

  # Create a Route Table for the VPC
  MyAppPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyAppVPC  # Reference to the VPC ID
      Tags:
        - Key: Name
          Value: MyAppPublicRouteTable

  # Create a Route to the Internet Gateway
  MyAppPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyAppPublicRouteTable  # Reference to the route table
      DestinationCidrBlock: "0.0.0.0/0"  # Route for all outbound traffic
      GatewayId: !Ref MyAppInternetGateway  # Route goes to the Internet Gateway

#**********************************************************************************************************************#
#*************************************************** VPC ENDPOINTS ****************************************************#
#**********************************************************************************************************************#

## AWS - not sure how to configure this yet

#**********************************************************************************************************************#
#************************************************ ROUTE TABLE <> SUBNETS **********************************************#
#**********************************************************************************************************************#

  # Associate the Route Table with Public Subnet A
  MyAppPublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetA
      RouteTableId: !Ref MyAppPublicRouteTable

  # Associate the Route Table with Public Subnet B
  MyAppPublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetB
      RouteTableId: !Ref MyAppPublicRouteTable

  # Associate the Route Table with Public Subnet C
  MyAppPublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetC
      RouteTableId: !Ref MyAppPublicRouteTable

#**********************************************************************************************************************#
#************************************************ NETWORK ACL <> SUBNETS **********************************************#
#**********************************************************************************************************************#

  # Associate the NACL with Public Subnet A
  MyAppPublicSubnetANACLSubnetAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetA
      NetworkAclId: !Ref MyAppNACL

  # Associate the NACL with Public Subnet B
  MyAppPublicSubnetBNACLSubnetAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetB
      NetworkAclId: !Ref MyAppNACL

  # Associate the NACL with Public Subnet C
  MyAppPublicSubnetCNACLSubnetAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref MyAppPublicSubnetC
      NetworkAclId: !Ref MyAppNACL

#**********************************************************************************************************************#
#**************************************** NETWORK ACL: INBOUND / OUTBOUND RULES ***************************************#
#**********************************************************************************************************************#

  # Create Inbound Rules for the NACL
  MyAppNACLInboundAllowRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MyAppNACL
      RuleNumber: 100
      Protocol: '-1'  # All protocols
      PortRange:
        From: 0
        To: 65535  # All ports
      Egress: false
      RuleAction: allow
      CidrBlock: 0.0.0.0/0  # Allow all sources

  # Create Outbound Rules for the NACL
  MyAppNACLOutboundAllowRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MyAppNACL
      RuleNumber: 100
      Protocol: '-1'  # All protocols
      PortRange:
        From: 0
        To: 65535  # All ports
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0  # Allow all destinations

#**********************************************************************************************************************#
#******************************************************** OUTPUTS *****************************************************#
#**********************************************************************************************************************#

Outputs:
  VPCId:
    Description: "VPC ID"
    Value: !Ref MyAppVPC
    Export:
      Name: "MyAppVPC"

  NACLId:
    Description: "NACL ID"
    Value: !Ref MyAppNACL

  DHCPOptionsId:
    Description: "DHCP Options Set ID"
    Value: !Ref MyAppDHCPOptions

  InternetGatewayId:
    Description: "Internet Gateway ID"
    Value: !Ref MyAppInternetGateway

  PublicRouteTableId:
    Description: "Public Route Table ID"
    Value: !Ref MyAppPublicRouteTable

  PublicSubnetAId:
    Description: "Public Subnet A ID"
    Value: !Ref MyAppPublicSubnetA
    Export:
      Name: "MyAppPublicSubnetA"

  PublicSubnetBId:
    Description: "Public Subnet B ID"
    Value: !Ref MyAppPublicSubnetB
    Export:
      Name: "MyAppPublicSubnetB"

  PublicSubnetCId:
    Description: "Public Subnet C ID"
    Value: !Ref MyAppPublicSubnetC
    Export:
      Name: "MyAppPublicSubnetC"

#**********************************************************************************************************************#
#**************************************************** END OF YAML *****************************************************#
#**********************************************************************************************************************#